{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.33.93.31351",
      "templateHash": "15250144924197520960"
    }
  },
  "parameters": {
    "clients": {
      "type": "array",
      "metadata": {
        "description": "List of client configurations"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "discriminator": {
      "type": "string",
      "defaultValue": "lexsb",
      "metadata": {
        "description": "Distinguished qualifier for resources"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "centralResourceGroup",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "rg-central"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "15707163151755465878"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Resource Group"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location where the Resource Group will be created"
              }
            }
          },
          "resources": [
            {
              "condition": "[not(equals(subscription().id, ''))]",
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2021-04-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]"
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the Resource Group"
              },
              "value": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('name'))]"
            }
          }
        }
      }
    },
    {
      "copy": {
        "name": "clientResourceGroups",
        "count": "[length(parameters('clients'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('rg-{0}', parameters('clients')[copyIndex()].name)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('rg-{0}', parameters('clients')[copyIndex()].name)]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "15707163151755465878"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Resource Group"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location where the Resource Group will be created"
              }
            }
          },
          "resources": [
            {
              "condition": "[not(equals(subscription().id, ''))]",
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2021-04-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]"
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the Resource Group"
              },
              "value": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('name'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "centralResourcesDeployment",
      "resourceGroup": "rg-central",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "discriminator": {
            "value": "[parameters('discriminator')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "13528860746941208853"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources"
              }
            },
            "firewallName": {
              "type": "string",
              "defaultValue": "globalFirewall",
              "metadata": {
                "description": "Global Firewall Name"
              }
            },
            "frontDoorName": {
              "type": "string",
              "defaultValue": "globalFrontDoor",
              "metadata": {
                "description": "Global Front Door Name"
              }
            },
            "sentinelWorkspaceName": {
              "type": "string",
              "defaultValue": "globalSentinelWorkspace",
              "metadata": {
                "description": "Global Sentinel Workspace Name"
              }
            },
            "centralVNetCidr": {
              "type": "string",
              "defaultValue": "10.0.0.0/16",
              "metadata": {
                "description": "CIDR block for the central VNet"
              }
            },
            "discriminator": {
              "type": "string",
              "metadata": {
                "description": "Distinguished qualifier for resources"
              }
            },
            "subnets": {
              "type": "array",
              "defaultValue": [
                {
                  "name": "AzureFirewallSubnet",
                  "addressPrefix": "10.0.1.0/24"
                },
                {
                  "name": "OtherServices",
                  "addressPrefix": "10.0.2.0/24"
                }
              ],
              "metadata": {
                "description": "Subnets for the central VNet"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "centralVNet",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[format('vnet-{0}-Central', parameters('discriminator'))]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "addressPrefixes": {
                    "value": [
                      "[parameters('centralVNetCidr')]"
                    ]
                  },
                  "subnets": {
                    "value": "[parameters('subnets')]"
                  },
                  "enablePrivateDns": {
                    "value": false
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.33.93.31351",
                      "templateHash": "6264664042577317795"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Creates a virtual network with the specified name"
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Location for all resources"
                      }
                    },
                    "addressPrefixes": {
                      "type": "array",
                      "metadata": {
                        "description": "Address prefixes for the virtual network"
                      }
                    },
                    "subnets": {
                      "type": "array",
                      "metadata": {
                        "description": "Subnets for the virtual network"
                      }
                    },
                    "enablePrivateDns": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Enable Private DNS for this VNet"
                      }
                    },
                    "privateDnsZoneNames": {
                      "type": "array",
                      "defaultValue": [
                        "privatelink.azurewebsites.net",
                        "privatelink.database.windows.net",
                        "privatelink.monitor.azure.com",
                        "privatelink.vaultcore.azure.net",
                        "privatelink.blob.core.windows.net",
                        "privatelink.file.core.windows.net"
                      ],
                      "metadata": {
                        "description": "List of Private DNS Zones to create"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks",
                      "apiVersion": "2023-02-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "copy": [
                          {
                            "name": "subnets",
                            "count": "[length(parameters('subnets'))]",
                            "input": {
                              "name": "[parameters('subnets')[copyIndex('subnets')].name]",
                              "properties": {
                                "addressPrefix": "[parameters('subnets')[copyIndex('subnets')].addressPrefix]"
                              }
                            }
                          }
                        ],
                        "addressSpace": {
                          "addressPrefixes": "[parameters('addressPrefixes')]"
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "privateDnsZones",
                        "count": "[length(parameters('privateDnsZoneNames'))]"
                      },
                      "condition": "[parameters('enablePrivateDns')]",
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneNames')[copyIndex()]]",
                      "location": "global"
                    },
                    {
                      "copy": {
                        "name": "privateDnsLinks",
                        "count": "[length(parameters('privateDnsZoneNames'))]"
                      },
                      "condition": "[parameters('enablePrivateDns')]",
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneNames')[copyIndex()], format('dnsl-{0}-{1}', parameters('name'), copyIndex()))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('name'))]"
                        },
                        "registrationEnabled": false
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneNames')[copyIndex()])]",
                        "[resourceId('Microsoft.Network/virtualNetworks', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "subnets": {
                      "type": "array",
                      "metadata": {
                        "description": "The subnet IDs of the virtual network"
                      },
                      "copy": {
                        "count": "[length(parameters('subnets'))]",
                        "input": {
                          "name": "[parameters('subnets')[copyIndex()].name]",
                          "id": "[format('{0}/subnets/{1}', resourceId('Microsoft.Network/virtualNetworks', parameters('name')), parameters('subnets')[copyIndex()].name)]"
                        }
                      }
                    },
                    "vnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "The resource ID of the virtual network"
                      },
                      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('name'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "frontDoor",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('frontDoorName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.33.93.31351",
                      "templateHash": "8062778733947308338"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Azure Front Door instance"
                      }
                    },
                    "skuTier": {
                      "type": "string",
                      "defaultValue": "Standard_AzureFrontDoor",
                      "allowedValues": [
                        "Standard_AzureFrontDoor",
                        "Premium_AzureFrontDoor"
                      ],
                      "metadata": {
                        "description": "SKU tier for the Azure Front Door"
                      }
                    },
                    "frontEndEndpoints": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Frontend endpoints for the Azure Front Door"
                      }
                    },
                    "backendPools": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Backend pools for the Azure Front Door"
                      }
                    },
                    "routingRules": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Routing rules for the Azure Front Door"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags to apply to the Azure Front Door instance"
                      }
                    }
                  },
                  "variables": {
                    "unusedParams": [
                      "[parameters('frontEndEndpoints')]",
                      "[parameters('backendPools')]",
                      "[parameters('routingRules')]"
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Cdn/profiles",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "location": "global",
                      "sku": {
                        "name": "[parameters('skuTier')]"
                      },
                      "properties": {
                        "originResponseTimeoutSeconds": 60
                      },
                      "tags": "[parameters('tags')]"
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "metadata": {
                        "description": "The resource ID of the Azure Front Door instance"
                      },
                      "value": "[resourceId('Microsoft.Cdn/profiles', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the Azure Front Door instance"
                      },
                      "value": "[parameters('name')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'centralVNet')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "firewall",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('firewallName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "subnetId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'centralVNet'), '2022-09-01').outputs.subnets.value[0].id]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.33.93.31351",
                      "templateHash": "4625543047512419147"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Azure Firewall"
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Location where the Azure Firewall will be deployed"
                      }
                    },
                    "subnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "Subnet ID where the Azure Firewall will be deployed"
                      }
                    },
                    "threatIntelMode": {
                      "type": "string",
                      "defaultValue": "Alert",
                      "allowedValues": [
                        "Off",
                        "Alert",
                        "Deny"
                      ],
                      "metadata": {
                        "description": "Threat intelligence mode for the Azure Firewall"
                      }
                    },
                    "firewallPolicyId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Firewall policy ID (optional)"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags to apply to the Azure Firewall"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2021-05-01",
                      "name": "[format('ip-{0}', parameters('name'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard"
                      },
                      "properties": {
                        "publicIPAllocationMethod": "Static"
                      }
                    },
                    {
                      "type": "Microsoft.Network/azureFirewalls",
                      "apiVersion": "2022-05-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "[format('ipconfig-{0}', parameters('name'))]",
                            "properties": {
                              "subnet": {
                                "id": "[parameters('subnetId')]"
                              },
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('ip-{0}', parameters('name')))]"
                              }
                            }
                          }
                        ],
                        "threatIntelMode": "[parameters('threatIntelMode')]",
                        "firewallPolicy": "[if(empty(parameters('firewallPolicyId')), null(), createObject('id', parameters('firewallPolicyId')))]"
                      },
                      "tags": "[parameters('tags')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('ip-{0}', parameters('name')))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "metadata": {
                        "description": "The resource ID of the Azure Firewall"
                      },
                      "value": "[resourceId('Microsoft.Network/azureFirewalls', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the Azure Firewall"
                      },
                      "value": "[parameters('name')]"
                    },
                    "publicIp": {
                      "type": "string",
                      "metadata": {
                        "description": "The public IP configuration of the Azure Firewall"
                      },
                      "value": "[reference(resourceId('Microsoft.Network/azureFirewalls', parameters('name')), '2022-05-01').ipConfigurations[0].properties.publicIPAddress.id]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'centralVNet')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "sentinel",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('sentinelWorkspaceName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.33.93.31351",
                      "templateHash": "8197107711077648969"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.OperationalInsights/workspaces",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "sku": {
                          "name": "PerGB2018"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'centralVNet')]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', 'centralResourceGroup')]",
        "clientResources"
      ]
    },
    {
      "copy": {
        "name": "clientResources",
        "count": "[length(parameters('clients'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-resources', parameters('clients')[copyIndex()].name)]",
      "resourceGroup": "[format('rg-{0}', parameters('clients')[copyIndex()].name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "clientName": {
            "value": "[parameters('clients')[copyIndex()].name]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "cidr": {
            "value": "[parameters('clients')[copyIndex()].cidr]"
          },
          "subnets": {
            "value": "[parameters('clients')[copyIndex()].subnets]"
          },
          "discriminator": {
            "value": "[parameters('discriminator')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "3481128028270443858"
            }
          },
          "parameters": {
            "clientName": {
              "type": "string",
              "metadata": {
                "description": "Client Name"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for client resources"
              }
            },
            "cidr": {
              "type": "string",
              "metadata": {
                "description": "VNet CIDR block"
              }
            },
            "subnets": {
              "type": "object",
              "metadata": {
                "description": "Subnets configuration"
              }
            },
            "discriminator": {
              "type": "string",
              "metadata": {
                "description": "Distinguished qualifier for resources"
              }
            }
          },
          "variables": {
            "resourceBaseName": "[format('{0}-{1}', parameters('discriminator'), parameters('clientName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('vnet-{0}', variables('resourceBaseName'))]",
              "resourceGroup": "[format('rg-{0}', parameters('clientName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[format('vnet-{0}', variables('resourceBaseName'))]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "addressPrefixes": {
                    "value": [
                      "[parameters('cidr')]"
                    ]
                  },
                  "subnets": {
                    "value": [
                      {
                        "name": "FrontEnd",
                        "addressPrefix": "[parameters('subnets').frontEnd]"
                      },
                      {
                        "name": "BackEnd",
                        "addressPrefix": "[parameters('subnets').backEnd]"
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.33.93.31351",
                      "templateHash": "6264664042577317795"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Creates a virtual network with the specified name"
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Location for all resources"
                      }
                    },
                    "addressPrefixes": {
                      "type": "array",
                      "metadata": {
                        "description": "Address prefixes for the virtual network"
                      }
                    },
                    "subnets": {
                      "type": "array",
                      "metadata": {
                        "description": "Subnets for the virtual network"
                      }
                    },
                    "enablePrivateDns": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Enable Private DNS for this VNet"
                      }
                    },
                    "privateDnsZoneNames": {
                      "type": "array",
                      "defaultValue": [
                        "privatelink.azurewebsites.net",
                        "privatelink.database.windows.net",
                        "privatelink.monitor.azure.com",
                        "privatelink.vaultcore.azure.net",
                        "privatelink.blob.core.windows.net",
                        "privatelink.file.core.windows.net"
                      ],
                      "metadata": {
                        "description": "List of Private DNS Zones to create"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks",
                      "apiVersion": "2023-02-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "copy": [
                          {
                            "name": "subnets",
                            "count": "[length(parameters('subnets'))]",
                            "input": {
                              "name": "[parameters('subnets')[copyIndex('subnets')].name]",
                              "properties": {
                                "addressPrefix": "[parameters('subnets')[copyIndex('subnets')].addressPrefix]"
                              }
                            }
                          }
                        ],
                        "addressSpace": {
                          "addressPrefixes": "[parameters('addressPrefixes')]"
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "privateDnsZones",
                        "count": "[length(parameters('privateDnsZoneNames'))]"
                      },
                      "condition": "[parameters('enablePrivateDns')]",
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneNames')[copyIndex()]]",
                      "location": "global"
                    },
                    {
                      "copy": {
                        "name": "privateDnsLinks",
                        "count": "[length(parameters('privateDnsZoneNames'))]"
                      },
                      "condition": "[parameters('enablePrivateDns')]",
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneNames')[copyIndex()], format('dnsl-{0}-{1}', parameters('name'), copyIndex()))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('name'))]"
                        },
                        "registrationEnabled": false
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneNames')[copyIndex()])]",
                        "[resourceId('Microsoft.Network/virtualNetworks', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "subnets": {
                      "type": "array",
                      "metadata": {
                        "description": "The subnet IDs of the virtual network"
                      },
                      "copy": {
                        "count": "[length(parameters('subnets'))]",
                        "input": {
                          "name": "[parameters('subnets')[copyIndex()].name]",
                          "id": "[format('{0}/subnets/{1}', resourceId('Microsoft.Network/virtualNetworks', parameters('name')), parameters('subnets')[copyIndex()].name)]"
                        }
                      }
                    },
                    "vnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "The resource ID of the virtual network"
                      },
                      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('name'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('asp-{0}', variables('resourceBaseName'))]",
              "resourceGroup": "[format('rg-{0}', parameters('clientName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[format('asp-{0}', variables('resourceBaseName'))]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "sku": {
                    "value": {
                      "name": "S1",
                      "tier": "Standard",
                      "size": "S1",
                      "capacity": 1
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.33.93.31351",
                      "templateHash": "8813810702849723213"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the App Service Plan"
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Location where the App Service Plan will be deployed"
                      }
                    },
                    "sku": {
                      "type": "object",
                      "defaultValue": {
                        "name": "S1",
                        "tier": "Standard",
                        "size": "S1",
                        "capacity": 2
                      },
                      "metadata": {
                        "description": "SKU configuration for the App Service Plan"
                      }
                    },
                    "isLinux": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Indicates whether the App Service Plan is for Linux"
                      }
                    },
                    "maximumElasticWorkerCount": {
                      "type": "int",
                      "defaultValue": 10,
                      "metadata": {
                        "description": "Maximum number of instances for the App Service Plan"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags to apply to the App Service Plan"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/serverfarms",
                      "apiVersion": "2022-03-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "sku": "[parameters('sku')]",
                      "properties": {
                        "reserved": "[parameters('isLinux')]",
                        "maximumElasticWorkerCount": "[parameters('maximumElasticWorkerCount')]"
                      },
                      "tags": "[parameters('tags')]"
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "metadata": {
                        "description": "The resource ID of the App Service Plan"
                      },
                      "value": "[resourceId('Microsoft.Web/serverfarms', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the App Service Plan"
                      },
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('app-{0}', variables('resourceBaseName'))]",
              "resourceGroup": "[format('rg-{0}', parameters('clientName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[format('app-{0}', variables('resourceBaseName'))]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "subnetId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('clientName'))), 'Microsoft.Resources/deployments', format('vnet-{0}', variables('resourceBaseName'))), '2022-09-01').outputs.subnets.value[0].id]"
                  },
                  "appServicePlanId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('clientName'))), 'Microsoft.Resources/deployments', format('asp-{0}', variables('resourceBaseName'))), '2022-09-01').outputs.id.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.33.93.31351",
                      "templateHash": "2544426169844831022"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the App Service"
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Location where the App Service will be deployed"
                      }
                    },
                    "subnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "Subnet ID for Private Link"
                      }
                    },
                    "appServicePlanId": {
                      "type": "string",
                      "metadata": {
                        "description": "ID of the App Service Plan"
                      }
                    },
                    "runtimeStack": {
                      "type": "string",
                      "defaultValue": "DOTNETCORE",
                      "allowedValues": [
                        "DOTNETCORE",
                        "NODE",
                        "JAVA",
                        "PYTHON",
                        "PHP"
                      ],
                      "metadata": {
                        "description": "Runtime stack for the App Service (e.g., DOTNETCORE, NODE, JAVA)"
                      }
                    },
                    "runtimeVersion": {
                      "type": "string",
                      "defaultValue": "7.0",
                      "metadata": {
                        "description": "Version of the runtime stack"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags to apply to the App Service"
                      }
                    },
                    "appSettings": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Environment variables (App Settings) for the App Service"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/sites",
                      "apiVersion": "2022-03-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "serverFarmId": "[parameters('appServicePlanId')]",
                        "publicNetworkAccess": "Disabled",
                        "siteConfig": {
                          "copy": [
                            {
                              "name": "appSettings",
                              "count": "[length(parameters('appSettings'))]",
                              "input": {
                                "name": "[parameters('appSettings')[copyIndex('appSettings')].name]",
                                "value": "[parameters('appSettings')[copyIndex('appSettings')].value]"
                              }
                            }
                          ]
                        }
                      },
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('pe-{0}', parameters('name'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[format('pe-{0}', parameters('name'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "privateLinkServiceId": {
                            "value": "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                          },
                          "privateDnsZoneName": {
                            "value": "privatelink.azurewebsites.net"
                          },
                          "subnetId": {
                            "value": "[parameters('subnetId')]"
                          },
                          "groupIds": {
                            "value": [
                              "sites"
                            ]
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.33.93.31351",
                              "templateHash": "7102567691614834550"
                            }
                          },
                          "parameters": {
                            "name": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the Private Endpoint"
                              }
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "Location where the Private Endpoint will be deployed"
                              }
                            },
                            "privateLinkServiceId": {
                              "type": "string",
                              "metadata": {
                                "description": "ID of the target resource for the Private Link connection"
                              }
                            },
                            "subnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "Subnet ID where the Private Endpoint will be created"
                              }
                            },
                            "groupIds": {
                              "type": "array",
                              "metadata": {
                                "description": "Group ID(s) for the resource type (e.g., blob, sqlServer, vault, sites)"
                              }
                            },
                            "privateDnsZoneName": {
                              "type": "string",
                              "metadata": {
                                "description": "Private DNS Zone Name (e.g., privatelink.azurewebsites.net)"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to apply to the Private Endpoint"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateEndpoints",
                              "apiVersion": "2023-09-01",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "subnet": {
                                  "id": "[parameters('subnetId')]"
                                },
                                "privateLinkServiceConnections": [
                                  {
                                    "name": "[format('plsc-{0}', parameters('name'))]",
                                    "properties": {
                                      "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                                      "groupIds": "[parameters('groupIds')]"
                                    }
                                  }
                                ]
                              },
                              "tags": "[parameters('tags')]"
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones/A",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), format('a-{0}', parameters('name')))]",
                              "properties": {
                                "ttl": 3600,
                                "aRecords": [
                                  {
                                    "ipv4Address": "[reference(resourceId('Microsoft.Network/privateEndpoints', parameters('name')), '2023-09-01').networkInterfaces[0].properties.ipConfigurations[0].properties.privateIPAddress]"
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "id": {
                              "type": "string",
                              "metadata": {
                                "description": "The resource ID of the Private Endpoint"
                              },
                              "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "metadata": {
                        "description": "The resource ID of the App Service"
                      },
                      "value": "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                    },
                    "defaultHostName": {
                      "type": "string",
                      "metadata": {
                        "description": "The default URL of the App Service"
                      },
                      "value": "[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-03-01').defaultHostName]"
                    },
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the App Service"
                      },
                      "value": "[parameters('name')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('clientName'))), 'Microsoft.Resources/deployments', format('asp-{0}', variables('resourceBaseName')))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('clientName'))), 'Microsoft.Resources/deployments', format('vnet-{0}', variables('resourceBaseName')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('sql-{0}', variables('resourceBaseName'))]",
              "resourceGroup": "[format('rg-{0}', parameters('clientName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[format('sql-{0}', variables('resourceBaseName'))]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "subnetId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('clientName'))), 'Microsoft.Resources/deployments', format('vnet-{0}', variables('resourceBaseName'))), '2022-09-01').outputs.subnets.value[1].id]"
                  },
                  "adminLogin": {
                    "value": "adminUser"
                  },
                  "adminPassword": {
                    "value": "Password@123!"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.33.93.31351",
                      "templateHash": "1727091870171808437"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the SQL Server"
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Location of the SQL Server"
                      }
                    },
                    "subnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "Subnet ID for Private Link"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags for the SQL Server"
                      }
                    },
                    "adminLogin": {
                      "type": "string",
                      "metadata": {
                        "description": "Administrator login for the SQL Server"
                      }
                    },
                    "adminPassword": {
                      "type": "securestring",
                      "metadata": {
                        "description": "Administrator password for the SQL Server"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Sql/servers",
                      "apiVersion": "2021-05-01-preview",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "publicNetworkAccess": "Disabled",
                        "administratorLogin": "[parameters('adminLogin')]",
                        "administratorLoginPassword": "[parameters('adminPassword')]"
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('pe-{0}', parameters('name'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[format('pe-{0}', parameters('name'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "privateLinkServiceId": {
                            "value": "[resourceId('Microsoft.Sql/servers', parameters('name'))]"
                          },
                          "privateDnsZoneName": {
                            "value": "privatelink.database.windows.net"
                          },
                          "subnetId": {
                            "value": "[parameters('subnetId')]"
                          },
                          "groupIds": {
                            "value": [
                              "sqlServer"
                            ]
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.33.93.31351",
                              "templateHash": "7102567691614834550"
                            }
                          },
                          "parameters": {
                            "name": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the Private Endpoint"
                              }
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "Location where the Private Endpoint will be deployed"
                              }
                            },
                            "privateLinkServiceId": {
                              "type": "string",
                              "metadata": {
                                "description": "ID of the target resource for the Private Link connection"
                              }
                            },
                            "subnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "Subnet ID where the Private Endpoint will be created"
                              }
                            },
                            "groupIds": {
                              "type": "array",
                              "metadata": {
                                "description": "Group ID(s) for the resource type (e.g., blob, sqlServer, vault, sites)"
                              }
                            },
                            "privateDnsZoneName": {
                              "type": "string",
                              "metadata": {
                                "description": "Private DNS Zone Name (e.g., privatelink.azurewebsites.net)"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to apply to the Private Endpoint"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateEndpoints",
                              "apiVersion": "2023-09-01",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "subnet": {
                                  "id": "[parameters('subnetId')]"
                                },
                                "privateLinkServiceConnections": [
                                  {
                                    "name": "[format('plsc-{0}', parameters('name'))]",
                                    "properties": {
                                      "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                                      "groupIds": "[parameters('groupIds')]"
                                    }
                                  }
                                ]
                              },
                              "tags": "[parameters('tags')]"
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones/A",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), format('a-{0}', parameters('name')))]",
                              "properties": {
                                "ttl": 3600,
                                "aRecords": [
                                  {
                                    "ipv4Address": "[reference(resourceId('Microsoft.Network/privateEndpoints', parameters('name')), '2023-09-01').networkInterfaces[0].properties.ipConfigurations[0].properties.privateIPAddress]"
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "id": {
                              "type": "string",
                              "metadata": {
                                "description": "The resource ID of the Private Endpoint"
                              },
                              "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Sql/servers', parameters('name'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('clientName'))), 'Microsoft.Resources/deployments', format('vnet-{0}', variables('resourceBaseName')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('stg{0}', variables('resourceBaseName'))]",
              "resourceGroup": "[format('rg-{0}', parameters('clientName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[format('stg{0}', variables('resourceBaseName'))]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "subnetId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('clientName'))), 'Microsoft.Resources/deployments', format('vnet-{0}', variables('resourceBaseName'))), '2022-09-01').outputs.subnets.value[1].id]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.33.93.31351",
                      "templateHash": "10621032980823199028"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Storage Account"
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Location where the Storage Account will be created"
                      }
                    },
                    "subnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "Subnet ID for Private Link connection"
                      }
                    },
                    "skuName": {
                      "type": "string",
                      "defaultValue": "Standard_LRS",
                      "allowedValues": [
                        "Standard_LRS",
                        "Standard_GRS",
                        "Standard_RAGRS",
                        "Standard_ZRS",
                        "Premium_LRS"
                      ],
                      "metadata": {
                        "description": "Replication type for the Storage Account"
                      }
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "StorageV2",
                      "metadata": {
                        "description": "Indicates whether the Storage Account is general-purpose V2"
                      }
                    },
                    "enableBlobSoftDelete": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Enable blob soft delete retention policy"
                      }
                    },
                    "blobSoftDeleteRetentionDays": {
                      "type": "int",
                      "defaultValue": 0,
                      "metadata": {
                        "description": "Retention period in days for blob soft delete (set 0 to disable)"
                      }
                    },
                    "enableContainerSoftDelete": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Enable container soft delete retention policy"
                      }
                    },
                    "containerSoftDeleteRetentionDays": {
                      "type": "int",
                      "defaultValue": 0,
                      "metadata": {
                        "description": "Retention period in days for container soft delete (set 0 to disable)"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags to apply to the Storage Account"
                      }
                    }
                  },
                  "variables": {
                    "storageAccountName": "[toLower(replace(format('{0}', parameters('name')), '-', ''))]",
                    "privateEndpointName": "[format('pe-{0}', variables('storageAccountName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2022-09-01",
                      "name": "[variables('storageAccountName')]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "[parameters('skuName')]"
                      },
                      "kind": "[parameters('kind')]",
                      "properties": {
                        "supportsHttpsTrafficOnly": true
                      },
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/blobServices",
                      "apiVersion": "2021-09-01",
                      "name": "[format('{0}/{1}', variables('storageAccountName'), 'default')]",
                      "properties": {
                        "deleteRetentionPolicy": "[if(greater(parameters('blobSoftDeleteRetentionDays'), 0), createObject('enabled', parameters('enableBlobSoftDelete'), 'days', parameters('blobSoftDeleteRetentionDays')), createObject('enabled', false()))]",
                        "containerDeleteRetentionPolicy": "[if(greater(parameters('containerSoftDeleteRetentionDays'), 0), createObject('enabled', parameters('enableContainerSoftDelete'), 'days', parameters('containerSoftDeleteRetentionDays')), createObject('enabled', false()))]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[variables('privateEndpointName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[variables('privateEndpointName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "privateLinkServiceId": {
                            "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                          },
                          "privateDnsZoneName": {
                            "value": "privatelink.blob.core.windows.net"
                          },
                          "subnetId": {
                            "value": "[parameters('subnetId')]"
                          },
                          "groupIds": {
                            "value": [
                              "blob"
                            ]
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.33.93.31351",
                              "templateHash": "7102567691614834550"
                            }
                          },
                          "parameters": {
                            "name": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the Private Endpoint"
                              }
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "Location where the Private Endpoint will be deployed"
                              }
                            },
                            "privateLinkServiceId": {
                              "type": "string",
                              "metadata": {
                                "description": "ID of the target resource for the Private Link connection"
                              }
                            },
                            "subnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "Subnet ID where the Private Endpoint will be created"
                              }
                            },
                            "groupIds": {
                              "type": "array",
                              "metadata": {
                                "description": "Group ID(s) for the resource type (e.g., blob, sqlServer, vault, sites)"
                              }
                            },
                            "privateDnsZoneName": {
                              "type": "string",
                              "metadata": {
                                "description": "Private DNS Zone Name (e.g., privatelink.azurewebsites.net)"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to apply to the Private Endpoint"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateEndpoints",
                              "apiVersion": "2023-09-01",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "subnet": {
                                  "id": "[parameters('subnetId')]"
                                },
                                "privateLinkServiceConnections": [
                                  {
                                    "name": "[format('plsc-{0}', parameters('name'))]",
                                    "properties": {
                                      "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                                      "groupIds": "[parameters('groupIds')]"
                                    }
                                  }
                                ]
                              },
                              "tags": "[parameters('tags')]"
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones/A",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), format('a-{0}', parameters('name')))]",
                              "properties": {
                                "ttl": 3600,
                                "aRecords": [
                                  {
                                    "ipv4Address": "[reference(resourceId('Microsoft.Network/privateEndpoints', parameters('name')), '2023-09-01').networkInterfaces[0].properties.ipConfigurations[0].properties.privateIPAddress]"
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "id": {
                              "type": "string",
                              "metadata": {
                                "description": "The resource ID of the Private Endpoint"
                              },
                              "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "metadata": {
                        "description": "The resource ID of the Storage Account"
                      },
                      "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                    },
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the Storage Account"
                      },
                      "value": "[variables('storageAccountName')]"
                    },
                    "primaryEndpoints": {
                      "type": "object",
                      "metadata": {
                        "description": "The primary endpoints of the Storage Account"
                      },
                      "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-09-01').primaryEndpoints]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('clientName'))), 'Microsoft.Resources/deployments', format('vnet-{0}', variables('resourceBaseName')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pkv-{0}', variables('resourceBaseName'))]",
              "resourceGroup": "[format('rg-{0}', parameters('clientName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[format('pkv-{0}', variables('resourceBaseName'))]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "subnetId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('clientName'))), 'Microsoft.Resources/deployments', format('vnet-{0}', variables('resourceBaseName'))), '2022-09-01').outputs.subnets.value[1].id]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.33.93.31351",
                      "templateHash": "15711054011246679244"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Key Vault"
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Location of the Key Vault"
                      }
                    },
                    "subnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "Subnet ID for Private Link"
                      }
                    },
                    "skuName": {
                      "type": "string",
                      "defaultValue": "standard",
                      "allowedValues": [
                        "standard",
                        "premium"
                      ],
                      "metadata": {
                        "description": "SKU of the Key Vault (standard or premium)"
                      }
                    },
                    "accessPolicies": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Object ID of the administrator or application requiring access"
                      }
                    },
                    "softDeleteRetentionDays": {
                      "type": "int",
                      "defaultValue": 7,
                      "metadata": {
                        "description": "Soft delete retention period in days (minimum 7 days)"
                      }
                    },
                    "workloadType": {
                      "type": "string",
                      "defaultValue": "dev",
                      "metadata": {
                        "description": "Workload type (dev or production)"
                      }
                    },
                    "enablePurgeProtection": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Enable purge protection for the Key Vault"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags to apply to the Key Vault"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults",
                      "apiVersion": "2022-07-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "sku": {
                          "family": "A",
                          "name": "[parameters('skuName')]"
                        },
                        "tenantId": "[subscription().tenantId]",
                        "accessPolicies": "[parameters('accessPolicies')]",
                        "enableSoftDelete": true,
                        "softDeleteRetentionInDays": "[parameters('softDeleteRetentionDays')]",
                        "enablePurgeProtection": "[parameters('enablePurgeProtection')]"
                      },
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('pe-{0}', parameters('name'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[format('pe-{0}', parameters('name'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "privateLinkServiceId": {
                            "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('name'))]"
                          },
                          "privateDnsZoneName": {
                            "value": "privatelink.vaultcore.azure.net"
                          },
                          "subnetId": {
                            "value": "[parameters('subnetId')]"
                          },
                          "groupIds": {
                            "value": [
                              "vault"
                            ]
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.33.93.31351",
                              "templateHash": "7102567691614834550"
                            }
                          },
                          "parameters": {
                            "name": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the Private Endpoint"
                              }
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "Location where the Private Endpoint will be deployed"
                              }
                            },
                            "privateLinkServiceId": {
                              "type": "string",
                              "metadata": {
                                "description": "ID of the target resource for the Private Link connection"
                              }
                            },
                            "subnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "Subnet ID where the Private Endpoint will be created"
                              }
                            },
                            "groupIds": {
                              "type": "array",
                              "metadata": {
                                "description": "Group ID(s) for the resource type (e.g., blob, sqlServer, vault, sites)"
                              }
                            },
                            "privateDnsZoneName": {
                              "type": "string",
                              "metadata": {
                                "description": "Private DNS Zone Name (e.g., privatelink.azurewebsites.net)"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to apply to the Private Endpoint"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateEndpoints",
                              "apiVersion": "2023-09-01",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "subnet": {
                                  "id": "[parameters('subnetId')]"
                                },
                                "privateLinkServiceConnections": [
                                  {
                                    "name": "[format('plsc-{0}', parameters('name'))]",
                                    "properties": {
                                      "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                                      "groupIds": "[parameters('groupIds')]"
                                    }
                                  }
                                ]
                              },
                              "tags": "[parameters('tags')]"
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones/A",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), format('a-{0}', parameters('name')))]",
                              "properties": {
                                "ttl": 3600,
                                "aRecords": [
                                  {
                                    "ipv4Address": "[reference(resourceId('Microsoft.Network/privateEndpoints', parameters('name')), '2023-09-01').networkInterfaces[0].properties.ipConfigurations[0].properties.privateIPAddress]"
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "id": {
                              "type": "string",
                              "metadata": {
                                "description": "The resource ID of the Private Endpoint"
                              },
                              "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('name'))]"
                    },
                    "vaultUri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('name')), '2022-07-01').vaultUri]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('clientName'))), 'Microsoft.Resources/deployments', format('vnet-{0}', variables('resourceBaseName')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pai-{0}', variables('resourceBaseName'))]",
              "resourceGroup": "[format('rg-{0}', parameters('clientName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "enablePrivateLinkScope": {
                    "value": true
                  },
                  "enablePrivateLink": {
                    "value": true
                  },
                  "name": {
                    "value": "[variables('resourceBaseName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "subnetId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('clientName'))), 'Microsoft.Resources/deployments', format('vnet-{0}', variables('resourceBaseName'))), '2022-09-01').outputs.subnets.value[1].id]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.33.93.31351",
                      "templateHash": "15979884932510719142"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Location for the resources"
                      }
                    },
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Application Insights instance"
                      }
                    },
                    "subnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "Subnet ID for Private Link"
                      }
                    },
                    "applicationType": {
                      "type": "string",
                      "defaultValue": "web",
                      "allowedValues": [
                        "web",
                        "other",
                        "java",
                        "node.js"
                      ],
                      "metadata": {
                        "description": "Application type for Application Insights"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags for the Application Insights instance"
                      }
                    },
                    "enablePrivateLinkScope": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Enable Private Link Scope integration"
                      }
                    },
                    "restrictPublicAccess": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Restrict public access to Application Insights"
                      }
                    },
                    "enablePrivateLink": {
                      "type": "bool",
                      "metadata": {
                        "description": "Enable Private Link Scope for the Application Insights instance"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/components",
                      "apiVersion": "2020-02-02",
                      "name": "[format('pai-{0}', parameters('name'))]",
                      "location": "[parameters('location')]",
                      "kind": "[parameters('applicationType')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "Application_Type": "[parameters('applicationType')]",
                        "publicNetworkAccessForIngestion": "[if(parameters('restrictPublicAccess'), 'Disabled', 'Enabled')]",
                        "publicNetworkAccessForQuery": "[if(parameters('restrictPublicAccess'), 'Disabled', 'Enabled')]",
                        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('law-{0}', parameters('name')))]",
                        "IngestionMode": "LogAnalytics"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', format('law-{0}', parameters('name')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.OperationalInsights/workspaces",
                      "apiVersion": "2023-09-01",
                      "name": "[format('law-{0}', parameters('name'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "retentionInDays": 30,
                        "sku": {
                          "name": "PerGB2018"
                        }
                      }
                    },
                    {
                      "condition": "[parameters('enablePrivateLinkScope')]",
                      "type": "microsoft.insights/privateLinkScopes",
                      "apiVersion": "2021-07-01-preview",
                      "name": "[format('pls-{0}', parameters('name'))]",
                      "location": "global",
                      "properties": {
                        "accessModeSettings": {
                          "ingestionAccessMode": "PrivateOnly",
                          "queryAccessMode": "PrivateOnly"
                        }
                      }
                    },
                    {
                      "condition": "[parameters('enablePrivateLink')]",
                      "type": "Microsoft.Insights/privateLinkScopes/scopedResources",
                      "apiVersion": "2021-07-01-preview",
                      "name": "[format('{0}/{1}', format('pls-{0}', parameters('name')), format('pls-{0}', parameters('name')))]",
                      "properties": {
                        "linkedResourceId": "[resourceId('Microsoft.Insights/components', format('pai-{0}', parameters('name')))]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Insights/components', format('pai-{0}', parameters('name')))]",
                        "[resourceId('microsoft.insights/privateLinkScopes', format('pls-{0}', parameters('name')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('pe-{0}', parameters('name'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[format('pe-{0}', parameters('name'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "privateLinkServiceId": {
                            "value": "[resourceId('microsoft.insights/privateLinkScopes', format('pls-{0}', parameters('name')))]"
                          },
                          "privateDnsZoneName": {
                            "value": "privatelink.insights.azure.com"
                          },
                          "subnetId": {
                            "value": "[parameters('subnetId')]"
                          },
                          "groupIds": {
                            "value": [
                              "azuremonitor"
                            ]
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.33.93.31351",
                              "templateHash": "7102567691614834550"
                            }
                          },
                          "parameters": {
                            "name": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the Private Endpoint"
                              }
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "Location where the Private Endpoint will be deployed"
                              }
                            },
                            "privateLinkServiceId": {
                              "type": "string",
                              "metadata": {
                                "description": "ID of the target resource for the Private Link connection"
                              }
                            },
                            "subnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "Subnet ID where the Private Endpoint will be created"
                              }
                            },
                            "groupIds": {
                              "type": "array",
                              "metadata": {
                                "description": "Group ID(s) for the resource type (e.g., blob, sqlServer, vault, sites)"
                              }
                            },
                            "privateDnsZoneName": {
                              "type": "string",
                              "metadata": {
                                "description": "Private DNS Zone Name (e.g., privatelink.azurewebsites.net)"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to apply to the Private Endpoint"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateEndpoints",
                              "apiVersion": "2023-09-01",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "subnet": {
                                  "id": "[parameters('subnetId')]"
                                },
                                "privateLinkServiceConnections": [
                                  {
                                    "name": "[format('plsc-{0}', parameters('name'))]",
                                    "properties": {
                                      "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                                      "groupIds": "[parameters('groupIds')]"
                                    }
                                  }
                                ]
                              },
                              "tags": "[parameters('tags')]"
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones/A",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), format('a-{0}', parameters('name')))]",
                              "properties": {
                                "ttl": 3600,
                                "aRecords": [
                                  {
                                    "ipv4Address": "[reference(resourceId('Microsoft.Network/privateEndpoints', parameters('name')), '2023-09-01').networkInterfaces[0].properties.ipConfigurations[0].properties.privateIPAddress]"
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "id": {
                              "type": "string",
                              "metadata": {
                                "description": "The resource ID of the Private Endpoint"
                              },
                              "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Insights/components', format('pai-{0}', parameters('name')))]",
                        "[resourceId('microsoft.insights/privateLinkScopes', format('pls-{0}', parameters('name')))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "metadata": {
                        "description": "The resource ID of the App Insights"
                      },
                      "value": "[resourceId('Microsoft.Insights/components', format('pai-{0}', parameters('name')))]"
                    },
                    "instrumentationKey": {
                      "type": "string",
                      "metadata": {
                        "description": "The instrumentation key of the App Insights"
                      },
                      "value": "[reference(resourceId('Microsoft.Insights/components', format('pai-{0}', parameters('name'))), '2020-02-02').InstrumentationKey]"
                    },
                    "connectionString": {
                      "type": "string",
                      "metadata": {
                        "description": "The connection string of the App Insights"
                      },
                      "value": "[reference(resourceId('Microsoft.Insights/components', format('pai-{0}', parameters('name'))), '2020-02-02').ConnectionString]"
                    },
                    "appInsightsId": {
                      "type": "string",
                      "metadata": {
                        "description": "The App Insights resource Id"
                      },
                      "value": "[resourceId('Microsoft.Insights/components', format('pai-{0}', parameters('name')))]"
                    },
                    "privateLinkScopeId": {
                      "type": "string",
                      "metadata": {
                        "description": "The Private Link Scope resource Id"
                      },
                      "value": "[if(parameters('enablePrivateLinkScope'), resourceId('microsoft.insights/privateLinkScopes', format('pls-{0}', parameters('name'))), '')]"
                    },
                    "logAnalyticsWorkspaceId": {
                      "type": "string",
                      "metadata": {
                        "description": "The Private Link Scope Association resource Id"
                      },
                      "value": "[resourceId('Microsoft.OperationalInsights/workspaces', format('law-{0}', parameters('name')))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('clientName'))), 'Microsoft.Resources/deployments', format('vnet-{0}', variables('resourceBaseName')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "clientResourceGroups"
      ]
    },
    {
      "copy": {
        "name": "peering",
        "count": "[length(parameters('clients'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('vnetPeering-{0}', parameters('clients')[copyIndex()].name)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "clientName": {
            "value": "[parameters('clients')[copyIndex()].name]"
          },
          "discriminator": {
            "value": "[parameters('discriminator')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "11945394352836934394"
            }
          },
          "parameters": {
            "clientName": {
              "type": "string"
            },
            "discriminator": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "hubPeering",
              "resourceGroup": "rg-central",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "clientName": {
                    "value": "[parameters('clientName')]"
                  },
                  "discriminator": {
                    "value": "[parameters('discriminator')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.33.93.31351",
                      "templateHash": "3835429535058294043"
                    }
                  },
                  "parameters": {
                    "clientName": {
                      "type": "string"
                    },
                    "discriminator": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "spokeVnetName": "[format('vnet-{0}-{1}', parameters('discriminator'), parameters('clientName'))]",
                    "spokeVnetRg": "[format('rg-{0}', parameters('clientName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}/{1}', format('vnet-{0}-Central', parameters('discriminator')), format('{0}-to-{1}', format('vnet-{0}-Central', parameters('discriminator')), variables('spokeVnetName')))]",
                      "properties": {
                        "remoteVirtualNetwork": {
                          "id": "[resourceId(variables('spokeVnetRg'), 'Microsoft.Network/virtualNetworks', variables('spokeVnetName'))]"
                        },
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": true,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": false
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "spokePeering",
              "resourceGroup": "[format('rg-{0}', parameters('clientName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "clientName": {
                    "value": "[parameters('clientName')]"
                  },
                  "discriminator": {
                    "value": "[parameters('discriminator')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.33.93.31351",
                      "templateHash": "2032057057955620510"
                    }
                  },
                  "parameters": {
                    "clientName": {
                      "type": "string"
                    },
                    "discriminator": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "hubVnetRg": "rg-central",
                    "hubVnetName": "[format('vnet-{0}-Central', parameters('discriminator'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}/{1}', format('vnet-{0}-{1}', parameters('discriminator'), parameters('clientName')), format('{0}-to-{1}', format('vnet-{0}-{1}', parameters('discriminator'), parameters('clientName')), variables('hubVnetName')))]",
                      "properties": {
                        "remoteVirtualNetwork": {
                          "id": "[resourceId(variables('hubVnetRg'), 'Microsoft.Network/virtualNetworks', variables('hubVnetName'))]"
                        },
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": true,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": false
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, 'rg-central'), 'Microsoft.Resources/deployments', 'centralResourcesDeployment')]",
        "clientResources"
      ]
    }
  ]
}